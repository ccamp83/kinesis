% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kin.signal.curvature.R
\name{kin.signal.curvature}
\alias{kin.signal.curvature}
\title{Calculate the Curvature of a 3D Trajectory}
\usage{
kin.signal.curvature(data, deltaTime, normalize = T)
}
\arguments{
\item{data}{A matrix or data frame with 3 columns representing X, Y, and Z coordinates}

\item{deltaTime}{Numeric value representing the time interval between samples}

\item{normalize}{Logical value indicating whether to normalize the curvature values 
to a range of [0,1] (default: TRUE)}
}
\value{
A numeric vector containing the calculated curvature values. If normalize=TRUE,
values are scaled between 0 and 1.
}
\description{
Computes the curvature of a 3D trajectory using velocity and acceleration components
derived from position data using Savitzky-Golay filtering.
}
\details{
The function calculates curvature using the formula:
k = |x'y'' - y'x''| / (x'^2 + y'^2)^(3/2)
where x' and y' are velocities, and x'' and y'' are accelerations.

Velocities and accelerations are computed using Savitzky-Golay filtering via the
kin.sgFilter function.
}
\examples{
\dontrun{
# Create sample 3D trajectory data
t <- seq(0, 2*pi, length.out=100)
data <- cbind(sin(t), cos(t), t)

# Calculate curvature with normalized output
curv <- kin.signal.curvature(data, deltaTime=0.1, normalize=TRUE)
}

}
