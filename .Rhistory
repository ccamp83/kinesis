km.res$moment <- with(km.res, ifelse(time == min(time), "start", "end"))
# translate the trajectory to origin (0,0,0)
transData <- km.res[km.res$moment=="start", !names(km.res)%in%c("time","moment")] # getting the centroids
# matrix subtraction
rotData <- rotData.backup - transData[rep(1, nrow(rotData.backup)),]
indData <- indData.backup - transData[rep(1, nrow(indData)),]
thuData <- thuData.backup - transData[rep(1, nrow(thuData)),]
# end coordinates of the whole grasp
end <- as.numeric(km.res[km.res$moment=="end",1:3] - km.res[km.res$moment=="start",1:3]) # centered end coordinates
# rotate trajectories
indData <- kin.rotate.trajectory(indData, end)
thuData <- kin.rotate.trajectory(thuData, end)
# polish rotated dataset
indData <- as.data.frame(indData)
names(indData) <- c("indexX","indexY","indexZ")
thuData <- as.data.frame(thuData)
names(thuData) <- c("thumbX","thumbY","thumbZ")
plot3d(rotData[c(1,3,2)])
points3d(indData[c(1,3,2)], col="red")
points3d(thuData[c(1,3,2)], col="blue")
indData <- indData.backup - transData[rep(1, nrow(indData)),]
indData <- indData.backup - transData[rep(1, nrow(indData.backup)),]
thuData <- thuData.backup - transData[rep(1, nrow(thuData.backup)),]
end <- as.numeric(km.res[km.res$moment=="end",1:3] - km.res[km.res$moment=="start",1:3]) # centered end coordinates
indData <- kin.rotate.trajectory(indData, end)
thuData <- kin.rotate.trajectory(thuData, end)
indData <- as.data.frame(indData)
names(indData) <- c("indexX","indexY","indexZ")
thuData <- as.data.frame(thuData)
names(thuData) <- c("thumbX","thumbY","thumbZ")
plot3d(rotData[c(1,3,2)])
points3d(indData[c(1,3,2)], col="red")
points3d(thuData[c(1,3,2)], col="blue")
(thetaT <- 5* pi/4)
(v <- c(cos(thetaT), sin(thetaT), 0))
(theta <- atan2(v[2], v[1]))
rgl::rotate3d(v, theta-pi/2, 0, 0, 1)
library(kinesis)
library(kinesis)
indData <- indData.backup - transData[rep(1, nrow(indData.backup)),]
thuData <- thuData.backup - transData[rep(1, nrow(thuData.backup)),]
end <- as.numeric(km.res[km.res$moment=="end",1:3] - km.res[km.res$moment=="start",1:3]) # centered end coordinates
indData <- kin.rotate.trajectory(indData, end)
thuData <- kin.rotate.trajectory(thuData, end)
indData <- as.data.frame(indData)
names(indData) <- c("indexX","indexY","indexZ")
thuData <- as.data.frame(thuData)
names(thuData) <- c("thumbX","thumbY","thumbZ")
kin.rotate.trajectory
plot3d(rotData[c(1,3,2)])
points3d(indData[c(1,3,2)], col="red")
points3d(thuData[c(1,3,2)], col="blue")
(thetaT <- 3* pi/4)
(v <- c(cos(thetaT), sin(thetaT), 0))
(theta <- atan2(v[2], v[1]))
rgl::rotate3d(v, theta-pi/2, 0, 0, 1)
(v <- c(cos(thetaT), sin(thetaT), cos(thetaT)))
(theta <- atan2(v[2], v[1]))
rgl::rotate3d(v, theta-pi/2, 0, 0, 1)
rgl::rotate3d(v, theta-pi/2, 0, 1, 1)
rgl::rotate3d(v, theta-pi/2, 1, 0, 1)
rgl::rotate3d(v, theta-pi/2, 0, 0, 1)
(v <- rgl::rotate3d(v, theta-pi/2, 0, 0, 1))
(v <- rgl::rotate3d(v, theta-pi/2, 0, 1, 0))
(v <- rgl::rotate3d(v, theta-pi/2, 1, 0, 0))
(thetaT <- 3* pi/4)
(v <- c(cos(thetaT), sin(thetaT), cos(thetaT)))
(theta <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, theta-pi/2, 0, 0, 1))
(theta <- atan2(v[3], v[1]))
(v <- rgl::rotate3d(v, theta-pi/2, 0, 1, 0))
(theta <- atan2(v[3], v[2]))
(v <- rgl::rotate3d(v, theta-pi/2, 1, 0, 0))
(v <- rgl::rotate3d(v, rep(theta-pi/2, 3), 1, 1, 1))
(thetaT <- 3* pi/4)
(v <- c(cos(thetaT), sin(thetaT), cos(thetaT)))
atan2(v,f)
f <- c(0,1,1)
atan2(v,f)
(theta <- atan2(v[2], v[1]))
(theta <- atan2(v[2], v[1]))*180/pi
theta
atan2(v,f)*180/pi
atan2(f,v)*180/pi
(thetaT <- 3* pi/4)
(v <- c(cos(thetaT), sin(thetaT), cos(thetaT)))
(thetaF <- atan2(v[2], v[1]))
(thetaT <- atan2(v[3], v[1]))
(thetaS <- atan2(v[2], v[3]))
(thetaF <- atan2(v[2], v[1]))
(thetaT <- atan2(v[3], v[1]))
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0))
(v <- c(cos(thetaT), sin(thetaT), cos(thetaT)))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1))
(thetaF <- atan2(v[2], v[1]))
(thetaT <- atan2(v[3], v[1]))
(thetaS <- atan2(v[2], v[3]))
(v <- c(cos(thetaT), sin(thetaT), cos(thetaT)))
(thetaT <- 3* pi/4)
(v <- c(cos(thetaT), sin(thetaT), cos(thetaT)))
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1))
(thetaT <- atan2(v[3], v[1]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0))
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0))
(thetaT <- 3* pi/4)
(v <- c(cos(thetaT), sin(thetaT), cos(thetaT)))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1))
(thetaT <- atan2(v[3], v[1]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0))
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0))
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0))
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1]))
(v <- rgl::rotate3d(v, thetaT-pi/2, 0, 1, 0))
(thetaV <- 3* pi/4)
(V <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1]))
(v <- rgl::rotate3d(V, thetaT-pi/2, 0, 1, 0))
(thetaV <- 3* pi/4)
(V <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1]))
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1]))
(thetaT <- atan2(v[3], v[1]))*180/pi
(thetaT <- atan2(v[3], v[1]))*180/pi+360
(thetaT <- atan2(v[3], v[1]))+pi-pi/2
(thetaT <- atan2(v[3], v[1]))+pi
thetaT*180/pi
thetaT*600/(2*pi)
thetaT*360/(2*pi)
(thetaT <- atan2(v[3], v[1]))+pi
thetaT*180/(pi)
(thetaT <- atan2(v[3], v[1]))+pi/2
thetaT*180/(pi)
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1]))+pi/2
thetaT*180/(pi)
(thetaT <- atan2(v[3], v[1]))+pi
thetaT*180/(pi)
thetaT
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1]))+pi
(thetaT <- atan2(v[3], v[1])+pi)
thetaT*180/(pi)
(v <- rgl::rotate3d(v, -thetaT, 0, 1, 0))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(thetaT <- atan2(v[3], v[1])+pi)*180/pi
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, -thetaT, 0, 1, 0))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, -thetaT, 0, 1, 0)) # 0 .707 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 .707 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 .707 -1
(thetaS <- atan2(v[2], v[3]))
(thetaS <- atan2(v[2], v[3])+pi)
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 .707 -1
(thetaS <- atan2(v[2], v[3])-pi)
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 .707 -1
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 .707 -1
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaT <- atan2(v[3], v[1])+pi)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 .707 -1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaV <- 1* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaT <- atan2(v[3], v[1])+pi)
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaT <- atan2(v[3], v[1]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 .707 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaT <- atan2(v[3], v[1]))
(thetaT <- atan2(v[1], v[3]))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaT <- atan2(v[1], v[3]))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(thetaS <- atan2(v[2], v[3]))*180/pi
v
(thetaS <- atan2(v[2], v[3]))
?rotate3d
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
asHomogeneous(v)
asEuclidean(v)
asEuclidean(asHomogeneous(v))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[3], v[2]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[3], v[2]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 0 0 1
sqrt(2)
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[3], v[2]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[3], v[2]))
(v <- rgl::rotate3d(v, thetaS, 0, 1, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[3], v[2]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[3], v[2]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[3], v[2]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 1 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV)))
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 1 1
2 * sqrt(.707)
sqrt(.707^2 + .707^2)
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 1 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), sin(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 0 1
rotationMatrix(thetaV, 1,1,1)
v%*%rotationMatrix(thetaV, 1,1,1)
asHomogeneous(v)%*%rotationMatrix(thetaV, 1,1,1)
asHomogeneous(v)%*%rotationMatrix(-thetaV, 1,1,1)
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), sin(thetaV))) # -.707 .707 .707
rotationMatrix(rep(thetaV, 3), 1,1,1)
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), sin(thetaV))) # -.707 .707 .707
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- c(cos(thetaV), sin(thetaV), sin(thetaV))) # -.707 .707 .707
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1])-pi/2)
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 0 1
sqrt(3*.707^2)
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, -thetaS, 1, 0, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 1 0 .707
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 1 0 .707
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 0 1
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 0 1 -.707
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 1 0 .707
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 0 1.22
(thetaV <- 3* pi/4)
(v <- c(cos(thetaV), sin(thetaV), cos(thetaV))) # -.707 .707 -.707
(thetaF <- atan2(v[2], v[1]))
(v <- rgl::rotate3d(v, thetaF, 0, 0, 1)) # 1 0 -.707
(thetaT <- atan2(v[1], v[3]))
(v <- rgl::rotate3d(v, thetaT, 0, 1, 0)) # 0 0 1.22
(thetaS <- atan2(v[2], v[3]))
(v <- rgl::rotate3d(v, thetaS, 1, 0, 0)) # 1 0 .707
library(kinesis)
indData <- indData.backup - transData[rep(1, nrow(indData.backup)),]
thuData <- thuData.backup - transData[rep(1, nrow(thuData.backup)),]
# end coordinates of the whole grasp
end <- as.numeric(km.res[km.res$moment=="end",1:3] - km.res[km.res$moment=="start",1:3]) # centered end coordinates
# rotate trajectories
indData <- kin.rotate.trajectory(indData, end)
thuData <- kin.rotate.trajectory(thuData, end)
# polish rotated dataset
indData <- as.data.frame(indData)
names(indData) <- c("indexX","indexY","indexZ")
thuData <- as.data.frame(thuData)
names(thuData) <- c("thumbX","thumbY","thumbZ")
plot3d(rotData[c(1,3,2)])
points3d(indData[c(1,3,2)], col="red")
points3d(thuData[c(1,3,2)], col="blue")
points3d(indData[c(1,3,2)], col="red")
indData <- indData.backup - transData[rep(1, nrow(indData.backup)),]
thuData <- thuData.backup - transData[rep(1, nrow(thuData.backup)),]
end <- as.numeric(km.res[km.res$moment=="end",1:3] - km.res[km.res$moment=="start",1:3]) # centered end coordinates
indData <- kin.rotate.trajectory(indData, end)
thuData <- kin.rotate.trajectory(thuData, end)
library(kinesis)
indData <- indData.backup - transData[rep(1, nrow(indData.backup)),]
thuData <- thuData.backup - transData[rep(1, nrow(thuData.backup)),]
end <- as.numeric(km.res[km.res$moment=="end",1:3] - km.res[km.res$moment=="start",1:3]) # centered end coordinates
indData <- kin.rotate.trajectory(indData, end)
thuData <- kin.rotate.trajectory(thuData, end)
indData <- as.data.frame(indData)
names(indData) <- c("indexX","indexY","indexZ")
thuData <- as.data.frame(thuData)
names(thuData) <- c("thumbX","thumbY","thumbZ")
plot3d(rotData[c(1,3,2)])
points3d(indData[c(1,3,2)], col="red")
points3d(thuData[c(1,3,2)], col="blue")
library(kinesis)
