library(kinesis)
library(kinesis)
library(kinesis)
libraries()
usefCols <- c("trialN","indexXraw","indexYraw","indexZraw","thumbXraw","thumbYraw","thumbZraw")
testData <- rtgData_bad[usefCols]
testData <- kin.frameN(testData)
testData <- kin.fingersOccluded(testData)
any(testData$fingersOccluded==1) # YES
testData <- kin.framesOccluded(testData)
testData <- ddply(testData, .(trialN), mutate,
missing.frames = any(framesOccluded > 0))
trial.na.frame <- unique(subset(testData, missing.frames)$trialN)
badTrialNum <- 38
testTrial <- subset(testData, trialN == badTrialNum)
ggplot(aes(frameN, thumbXraw, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
ggplot(aes(frameN, indexXraw, color = fingersOccluded), data = testTrial) + geom_point() # index data is OK
max(testTrial$framesOccluded) # 18
testTrial$thumbX <- with(testTrial, kin.smooth.repair(frameN,thumbXraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
ggplot(aes(frameN, thumbX, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
?butter
library(signal)
?butter
1/c(8, 12)
library(kinesis)
library(kinesis)
library(kinesis)
library("kinesis", lib.loc="~/R/win-library/3.4")
detach("package:kinesis", unload=TRUE)
library("kinesis", lib.loc="~/R/win-library/3.4")
library(kinesis)
kin.bwFilter <- function(s, n = 2, W = 1/c(8, 12),type="pass"){
bf <- butter(n, W, type=type)
b <- filter(bf, s)
return(b)
}
with(testTrial, kin.bwFilter(thumbX))
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX))
qplot(thumbX, thumbXbw, data=testTrial)
qplot(thumbXbw, thumbX, data=testTrial)
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
ggplot(aes(frameN, thumbX, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
kin.bwFilter <- function(s, n = 2, cutoff_freq = 10,type="low"){
bf <- butter(n, W = 1/cutoff_freq, type=type)
b <- filter(bf, s)
return(b)
}
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 20))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 5))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "low"))
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbXbw, cutoff_freq = 10, type = "high"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "low"))
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbXbw, cutoff_freq = -10, type = "low"))
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "high"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "stop"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "low"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, n = 4, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
rev(c(1,2,3))
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(rev(thumbXbw), cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
library(kinesis)
libraries()
# PROCEDURE FROM GALLIVAN  and CHAPMAN 2014
#### Prepare the dataset ####
# keep only useful columns
usefCols <- c("trialN","indexXraw","indexYraw","indexZraw","thumbXraw","thumbYraw","thumbZraw")
testData <- rtgData_bad[usefCols]
# add frameN
testData <- kin.frameN(testData)
# is there missing data for each digit in this dataset?
testData <- kin.fingersOccluded(testData)
any(testData$fingersOccluded==1) # YES
# count frames with missing data
testData <- kin.framesOccluded(testData)
#### 1. individual trial analysis ####
###  1.1 extract ROI ----
##   1.1.1 fill in missing frames ----
# inpaint_nans function in matlab
# select one trial with missing frames
# flag trials with missing frames
testData <- ddply(testData, .(trialN), mutate,
missing.frames = any(framesOccluded > 0))
# extract these trials number
trial.na.frame <- unique(subset(testData, missing.frames)$trialN)
# pick a random bad trial
badTrialNum <- 38
testTrial <- subset(testData, trialN == badTrialNum)
# plot the data
ggplot(aes(frameN, thumbXraw, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
ggplot(aes(frameN, indexXraw, color = fingersOccluded), data = testTrial) + geom_point() # index data is OK
# how many bad frame are there?
max(testTrial$framesOccluded) # 18
testTrial$thumbX <- with(testTrial, kin.smooth.repair(frameN,thumbXraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
ggplot(aes(frameN, thumbX, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
library(kinesis)
libraries()
# PROCEDURE FROM GALLIVAN  and CHAPMAN 2014
#### Prepare the dataset ####
# keep only useful columns
usefCols <- c("trialN","indexXraw","indexYraw","indexZraw","thumbXraw","thumbYraw","thumbZraw")
testData <- rtgData_bad[usefCols]
# add frameN
testData <- kin.frameN(testData)
# is there missing data for each digit in this dataset?
testData <- kin.fingersOccluded(testData)
any(testData$fingersOccluded==1) # YES
# count frames with missing data
testData <- kin.framesOccluded(testData)
#### 1. individual trial analysis ####
###  1.1 extract ROI ----
##   1.1.1 fill in missing frames ----
# inpaint_nans function in matlab
# select one trial with missing frames
# flag trials with missing frames
testData <- ddply(testData, .(trialN), mutate,
missing.frames = any(framesOccluded > 0))
# extract these trials number
trial.na.frame <- unique(subset(testData, missing.frames)$trialN)
# pick a random bad trial
badTrialNum <- 38
testTrial <- subset(testData, trialN == badTrialNum)
# plot the data
ggplot(aes(frameN, thumbXraw, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
ggplot(aes(frameN, indexXraw, color = fingersOccluded), data = testTrial) + geom_point() # index data is OK
# how many bad frame are there?
max(testTrial$framesOccluded) # 18
# repair missing frames
testTrial$thumbX <- with(testTrial, kin.smooth.repair(frameN,thumbXraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
ggplot(aes(frameN, thumbX, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
kin.bwFilter <- function(s, n = 2, cutoff_freq = 10,type="low"){
bf <- butter(n, W = 1/cutoff_freq, type=type)
b <- filtfilt(bf, s)
return(b)
}
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 20, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 12, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 8, type = "pass"))
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = c(8,12), type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
library(kinesis)
rm(list = ls())
library(kinesis)
libraries()
# PROCEDURE FROM GALLIVAN  and CHAPMAN 2014
#### Prepare the dataset ####
# keep only useful columns
usefCols <- c("trialN","indexXraw","indexYraw","indexZraw","thumbXraw","thumbYraw","thumbZraw")
testData <- rtgData_bad[usefCols]
# add frameN
testData <- kin.frameN(testData)
# is there missing data for each digit in this dataset?
testData <- kin.fingersOccluded(testData)
any(testData$fingersOccluded==1) # YES
# count frames with missing data
testData <- kin.framesOccluded(testData)
#### 1. individual trial analysis ####
###  1.1 extract ROI ----
##   1.1.1 fill in missing frames ----
# inpaint_nans function in matlab
# select one trial with missing frames
# flag trials with missing frames
testData <- ddply(testData, .(trialN), mutate,
missing.frames = any(framesOccluded > 0))
# extract these trials number
trial.na.frame <- unique(subset(testData, missing.frames)$trialN)
# pick a random bad trial
badTrialNum <- 38
testTrial <- subset(testData, trialN == badTrialNum)
# plot the data
ggplot(aes(frameN, thumbXraw, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
ggplot(aes(frameN, indexXraw, color = fingersOccluded), data = testTrial) + geom_point() # index data is OK
# how many bad frame are there?
max(testTrial$framesOccluded) # 18
# repair missing frames
testTrial$thumbX <- with(testTrial, kin.smooth.repair(frameN,thumbXraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
ggplot(aes(frameN, thumbX, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
##   1.1.2 butterworth filter ----
# dual pass, 8–12 Hz cutoff, 2nd order
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
library(kinesis)
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass", init = 280))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass", init = rep(280, 10))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass", init = rep(280, 10)))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
library(kinesis)
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass", init = rep(280, 10)))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
library(kinesis)
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass", init = rep(280, 10)))
?filter
library(kinesis)
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass", init = rep(280, 10)))
library(kinesis)
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
library(kinesis)
libraries()
usefCols <- c("trialN","indexXraw","indexYraw","indexZraw","thumbXraw","thumbYraw","thumbZraw")
testData <- rtgData_bad[usefCols]
testData <- kin.frameN(testData)
testData <- kin.fingersOccluded(testData)
any(testData$fingersOccluded==1) # YES
testData <- kin.framesOccluded(testData)
testData <- ddply(testData, .(trialN), mutate,
missing.frames = any(framesOccluded > 0))
trial.na.frame <- unique(subset(testData, missing.frames)$trialN)
badTrialNum <- 38
testTrial <- subset(testData, trialN == badTrialNum)
ggplot(aes(frameN, thumbXraw, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
ggplot(aes(frameN, indexXraw, color = fingersOccluded), data = testTrial) + geom_point() # index data is OK
max(testTrial$framesOccluded) # 18
testTrial$thumbX <- with(testTrial, kin.smooth.repair(frameN,thumbXraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
ggplot(aes(frameN, thumbX, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass", n = 4))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 20, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 1, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 3, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 4, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
badTrialNum <- 1
badTrialNum <- 40
testTrial <- subset(testData, trialN == badTrialNum)
ggplot(aes(frameN, thumbXraw, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
ggplot(aes(frameN, indexXraw, color = fingersOccluded), data = testTrial) + geom_point() # index data is OK
ggplot(aes(frameN, thumbXraw, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
ggplot(aes(frameN, indexXraw, color = fingersOccluded), data = testTrial) + geom_point() # index data is OK
max(testTrial$framesOccluded) # 18
testTrial$thumbX <- with(testTrial, kin.smooth.repair(frameN,thumbXraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
ggplot(aes(frameN, thumbX, color = fingersOccluded), data = testTrial) + geom_point() # thumb data is bad
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 4, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
library(kinesis)
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 4, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 100, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 20, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
testTrial$thumbXbw <- with(testTrial, kin.bwFilter(thumbX, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(frameN, thumbX), color = "black") +
geom_point(aes(frameN, thumbXbw), color = "red")
head(testTrial)
head(rtgData_bad)
testTrial$time <- testTrial$frameN * 1/85
testTrial$time
testTrial$thumbXvel <- with(testTrial, kin.derive(time,thumbX,d=1))
testTrial$thumbYvel <- with(testTrial, kin.derive(time,thumbY,d=1))
testTrial$thumbZvel <- with(testTrial, kin.derive(time,thumbZ,d=1))
testTrial$thumbXvel <- with(testTrial, kin.derive(time,thumbX,d=1))
testTrial$thumbXrep <- with(testTrial, kin.smooth.repair(frameN,thumbXraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
testTrial$thumbYrep <- with(testTrial, kin.smooth.repair(frameN,thumbYraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
testTrial$thumbZrep <- with(testTrial, kin.smooth.repair(frameN,thumbZraw, lam = 10e-18, maxFrames= 20, fingersOccluded=fingersOccluded, framesOccluded=framesOccluded))
testTrial$thumbX <- with(testTrial, kin.bwFilter(thumbXrep, cutoff_freq = 10, type = "pass"))
testTrial$thumbY <- with(testTrial, kin.bwFilter(thumbYrep, cutoff_freq = 10, type = "pass"))
testTrial$thumbZ <- with(testTrial, kin.bwFilter(thumbZrep, cutoff_freq = 10, type = "pass"))
testTrial$thumbXvel <- with(testTrial, kin.derive(time,thumbX,d=1))
testTrial$thumbYvel <- with(testTrial, kin.derive(time,thumbY,d=1))
testTrial$thumbZvel <- with(testTrial, kin.derive(time,thumbZ,d=1))
testTrial$thumbVel <- sqrt(thumbXvel^2 + thumbYvel^2 + thumbZvel^2)
testTrial$thumbVel <- with(testTrial, sqrt(thumbXvel^2 + thumbYvel^2 + thumbZvel^2))
testTrial$thumbVel <- with(testTrial, kin.bwFilter(thumbVel, cutoff_freq = 10, type = "pass"))
testTrial$thumbVel
testTrial$thumbZvel
testTrial$thumbZ
testTrial$thumbZ <- testTrial$thumbZ*-1
testTrial$thumbXvel <- with(testTrial, kin.derive(time,thumbX,d=1))
testTrial$thumbYvel <- with(testTrial, kin.derive(time,thumbY,d=1))
testTrial$thumbZvel <- with(testTrial, kin.derive(time,thumbZ,d=1))
testTrial$thumbVel <- with(testTrial, sqrt(thumbXvel^2 + thumbYvel^2 + thumbZvel^2))
testTrial$thumbVel
testTrial$thumbYvel
testTrial$thumbZvel
ggplot(data = testTrial) +
geom_point(aes(time, thumbXvel), color = "red") +
geom_point(aes(time, thumbYvel), color = "darkgreen") +
geom_point(aes(time, thumbZvel), color = "blue")
ggplot(data = testTrial) +
geom_point(aes(time, thumbXvel), color = "red") +
geom_point(aes(time, thumbYvel), color = "darkgreen") +
geom_point(aes(time, thumbZvel), color = "blue") +
geom_point(aes(time, thumbVel), color = "black")
testTrial$thumbXvel <- with(testTrial, kin.derive(frameN,thumbX,d=1))
testTrial$thumbYvel <- with(testTrial, kin.derive(frameN,thumbY,d=1))
testTrial$thumbZvel <- with(testTrial, kin.derive(frameN,thumbZ,d=1))
testTrial$thumbVel <- with(testTrial, sqrt(thumbXvel^2 + thumbYvel^2 + thumbZvel^2))
ggplot(data = testTrial) +
geom_point(aes(time, thumbXvel), color = "red") +
geom_point(aes(time, thumbYvel), color = "darkgreen") +
geom_point(aes(time, thumbZvel), color = "blue") +
geom_point(aes(time, thumbVel), color = "black")
ggplot(aes(frameN, time), data=testTrial) + geom_point()
ggplot(data = testTrial) +
geom_point(aes(time, thumbX), color = "black") +
geom_point(aes(time, thumbXbw), color = "red")
testTrial$frameT <- 1/85
testTrial$time <- testTrial$frameN * testTrial$frameT
testTrial$thumbXvel <- with(testTrial, kin.derive(frameN,thumbX,d=1) / frameT)
testTrial$thumbYvel <- with(testTrial, kin.derive(frameN,thumbY,d=1) / frameT)
testTrial$thumbZvel <- with(testTrial, kin.derive(frameN,thumbZ,d=1) / frameT)
testTrial$thumbVel <- with(testTrial, sqrt(thumbXvel^2 + thumbYvel^2 + thumbZvel^2))
ggplot(data = testTrial) +
geom_point(aes(time, thumbXvel), color = "red") +
geom_point(aes(time, thumbYvel), color = "darkgreen") +
geom_point(aes(time, thumbZvel), color = "blue") +
geom_point(aes(time, thumbVel), color = "black")
testTrial$thumbXvel <- with(testTrial, kin.derive(frameN,thumbX,d=1) / frameT)
testTrial$thumbYvel <- with(testTrial, kin.derive(frameN,thumbY,d=1) / frameT)
testTrial$thumbZvel <- with(testTrial, kin.derive(frameN,thumbZ,d=1) / frameT)
testTrial$thumbVel <- with(testTrial, sqrt(thumbXvel^2 + thumbYvel^2 + thumbZvel^2)) # in mm/s
ggplot(data = testTrial) +
geom_point(aes(time, thumbXvel), color = "red") +
geom_point(aes(time, thumbYvel), color = "darkgreen") +
geom_point(aes(time, thumbZvel), color = "blue") +
geom_point(aes(time, thumbVel), color = "black")
ggplot(data = testTrial) +
geom_point(aes(time, thumbX), color = "black") +
geom_point(aes(time, thumbXbw), color = "red")
ggplot(data = testTrial) +
geom_point(aes(time, thumbXvel), color = "red") +
geom_point(aes(time, thumbYvel), color = "darkgreen") +
geom_point(aes(time, thumbZvel), color = "blue") +
geom_point(aes(time, thumbVel), color = "black")
testTrial$thumbVel <- with(testTrial, kin.bwFilter(thumbVel, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(time, thumbXvel), color = "red") +
geom_point(aes(time, thumbYvel), color = "darkgreen") +
geom_point(aes(time, thumbZvel), color = "blue") +
geom_point(aes(time, thumbVel), color = "black")
testTrial$thumbAcc <- with(testTrial, kin.derive(frameN,thumbVel,d=1) / frameT)
testTrial$thumbAcc <- with(testTrial, kin.bwFilter(thumbAcc, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(time, thumbVel), color = "black") +
geom_point(aes(time, thumbAcc), color = "red")
testTrial$thumbAcc <- with(testTrial, kin.derive(frameN,thumbVel,d=1) / frameT)
ggplot(data = testTrial) +
geom_point(aes(time, thumbVel), color = "black") +
geom_point(aes(time, thumbAcc), color = "red")
testTrial$thumbAcc <- with(testTrial, kin.bwFilter(thumbAcc, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(time, thumbVel), color = "black") +
geom_point(aes(time, thumbAcc), color = "red")
testTrial$thumbAcc <- with(testTrial, kin.derive(frameN,thumbVel,d=1) / frameT)
testTrial$thumbAcc <- with(testTrial, kin.bwFilter(thumbAcc, cutoff_freq = 10, type = "pass"))
ggplot(data = testTrial) +
geom_point(aes(time, thumbVel), color = "black") +
geom_point(aes(time, thumbAcc), color = "red")
onsetData <- testTrial[,c("frameN","thumbVel")]
onsetData
onsetData <- testTrial[,c("frameN","thumbVel","thumbAcc")]
onsetData
options(digits = 3)
onsetData
options(digits = 3, scipen = 2)
onsetData
options(digits = 3, scipen = 0)
onsetData
options(digits = 3, scipen = 1)
onsetData
options(digits = 3, scipen = 999)
onsetData
options(digits = 3, scipen = 1)
options(scipen = 1, digits = 3)
options(digits = 3, scipen = 1)
options(scipen = 1, digits = 3)
onsetData
onsetData <- subset(onsetData, thumbVel > 20)
onsetData <- testTrial[,c("frameN","thumbVel","thumbAcc")]
with(onsetData, thumbVel > 20)
onsetData$travel <- with(onsetData, thumbVel > 20)
with(onsetData, split(thumbVel, travel))
onsetData
ggplot(data = testTrial) +
geom_point(aes(time, thumbVel), color = "black")
ggplot(data = testTrial) +
geom_point(aes(time, thumbXvel), color = "red") +
geom_point(aes(time, thumbYvel), color = "darkgreen") +
geom_point(aes(time, thumbZvel), color = "blue") +
geom_point(aes(time, thumbVel), color = "black")
